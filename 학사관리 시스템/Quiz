-- Q1. 교수의 학과 정보를 출력하세요(교수이름, 학과명)

select* from professor;
select* from department;

select p.professor_name as 교수이름, d.department_name as 학과명
from professor p
join department d
on p.department_code = d.department_code ;

************************************************************************

-- Q2. 학과별 교수의 수를 출력하세요

select* from professor;
select* from department;

select d.department_name as 학과명, count(p.professor_code) as 교수의수
from professor p
join department d
on p.department_code = d.department_code
group by d.department_name;

************************************************************************

-- Q3. 수학통계학의 학생 정보를 출력하세요

select * from department;
select * from student;

select s.student_id,student_name, s.student_height, d.department_code, d.department_name
from student s
inner join department d
on s.department_code = d.department_code
where d.department_name = '수학통계학';

************************************************************************

-- Q4. 학생 중 성이 '바' 인 학생이 속한 학과 이름과 학생 이름을 출력하세요

select * from department;
select * from student;

select s.student_name 학생이름,  d.department_name as 과명
from student s
join department d
on s.department_code = d.department_code
where s.student_name like '바%'; 

************************************************************************

-- Q5. 학생의 키가 175 ~ 180 사이에 속하는 학생 수를 출력하세요
select * from student;

select concat(count(student_id), '명')  count
from student
where student_height between 175 and 180;

select concat(count(student_id), '명')  count
from student
where student_height >= 175 and student_height <= 180;

************************************************************************

-- Q6. 학과별 키의 최고값과, 평균값을 출력하세요
select * from department;
select * from student;

select department_name, max(s.student_height) as 최고값, avg(s.student_height) as 평균값
from department d
join student s
on d.department_code = s.department_code
group by department_name;

************************************************************************

-- Q7. '다학생'과 같은 학과에 속한 학생의 이름을 출력하세요
select * from department;
select * from student;

select student_name
from student
where department_code = '1';

select department_code
from student 
where student_name = '다학생';

# 위 아래 문장을 합친것

select student_name
from student
where department_code = (
	select department_code
	from student 
	where student_name = '다학생'
    );

************************************************************************

-- Q8. 가장 많은 학생이 있는 학과 이름을 출력하세요

select * from department;
select * from student;

select count(department_code) cnt
from student
group by department_code
order by cnt desc
limit 1;

select department_code
from student
group by department_code
having count(department_code) = (
   select count(department_code) cnt
   from student
   group by department_code
   order by cnt desc
   limit 1
);

select department_name
from department
where department_code = 1;


select department_name
from department
where department_code = (
   select department_code
   from student
   group by department_code
   having count(department_code) = (
      select count(department_code) cnt
      from student
      group by department_code
      order by cnt desc
      limit 1
   )
);

# 또 다른 경우의 수

select a.department_name
from department a
join student b 
on a.department_code = b.department_code
GROUP BY a.department_name
order by count(b.student_id) desc
limit 1;

************************************************************************

